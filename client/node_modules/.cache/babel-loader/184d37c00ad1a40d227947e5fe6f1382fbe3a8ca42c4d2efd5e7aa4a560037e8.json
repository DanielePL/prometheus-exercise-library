{"ast":null,"code":"// client/src/api/exercises.js\nimport axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';export const getExercises=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{muscleGroup,category,search}=filters;const params={};if(muscleGroup&&muscleGroup!=='All')params.muscleGroup=muscleGroup;if(category&&category!=='All')params.category=category;if(search)params.search=search;const response=await axios.get(\"\".concat(API_URL,\"/exercises\"),{params});return response.data;};export const createExercise=async exerciseData=>{const response=await axios.post(\"\".concat(API_URL,\"/exercises\"),exerciseData);return response.data;};export const updateExercise=async(id,exerciseData)=>{const response=await axios.put(\"\".concat(API_URL,\"/exercises/\").concat(id),exerciseData);return response.data;};export const deleteExercise=async id=>{const response=await axios.delete(\"\".concat(API_URL,\"/exercises/\").concat(id));return response.data;};export const importExercises=async file=>{const formData=new FormData();formData.append('file',file);const response=await axios.post(\"\".concat(API_URL,\"/import\"),formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;};export const searchExercisesWithAI=async searchTerm=>{const response=await axios.post(\"\".concat(API_URL,\"/ai-search\"),{searchTerm});return response.data;};export const getStats=async()=>{const response=await axios.get(\"\".concat(API_URL,\"/stats\"));return response.data;};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getExercises","filters","arguments","length","undefined","muscleGroup","category","search","params","response","get","concat","data","createExercise","exerciseData","post","updateExercise","id","put","deleteExercise","delete","importExercises","file","formData","FormData","append","headers","searchExercisesWithAI","searchTerm","getStats"],"sources":["/Users/danielepauli/PycharmProjects/prometheus-exercise-library/client/src/api/exercises.js"],"sourcesContent":["// client/src/api/exercises.js\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nexport const getExercises = async (filters = {}) => {\n  const { muscleGroup, category, search } = filters;\n  const params = {};\n\n  if (muscleGroup && muscleGroup !== 'All') params.muscleGroup = muscleGroup;\n  if (category && category !== 'All') params.category = category;\n  if (search) params.search = search;\n\n  const response = await axios.get(`${API_URL}/exercises`, { params });\n  return response.data;\n};\n\nexport const createExercise = async (exerciseData) => {\n  const response = await axios.post(`${API_URL}/exercises`, exerciseData);\n  return response.data;\n};\n\nexport const updateExercise = async (id, exerciseData) => {\n  const response = await axios.put(`${API_URL}/exercises/${id}`, exerciseData);\n  return response.data;\n};\n\nexport const deleteExercise = async (id) => {\n  const response = await axios.delete(`${API_URL}/exercises/${id}`);\n  return response.data;\n};\n\nexport const importExercises = async (file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n\n  const response = await axios.post(`${API_URL}/import`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n\n  return response.data;\n};\n\nexport const searchExercisesWithAI = async (searchTerm) => {\n  const response = await axios.post(`${API_URL}/ai-search`, { searchTerm });\n  return response.data;\n};\n\nexport const getStats = async () => {\n  const response = await axios.get(`${API_URL}/stats`);\n  return response.data;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}